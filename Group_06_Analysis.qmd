---
title: "Group_06"
author: "Analysis of IMDB data set"
number-sections: true
format: 
  html:
    embed-resources: true
    code-tools: true
  pdf:
    geometry: "left=2cm, right=2cm, top=2cm, bottom=2cm"
editor_options: 
  chunk_output_type: console
execute:
  echo: false
  eval: true
  warning: false
  message: false
---

```{r}
#| label: libraries
library(ggplot2)
library(dplyr)
library(tidyverse)
library(gt)
library(patchwork)
library(gridExtra)
library(moderndive)
library(MASS)
library(knitr)
library(GGally)
library(skimr)
library(ggpubr)
```

# Introduction {#sec-Intro}

The study aims to investigate the relationship between various film attributes and IMDB ratings, drawing data from the IMDB film database allocated. The data set comprises of the factors such as film ID, release year, duration, budget, votes, genre, and IMDB rating. The research question focuses on examining the factors that impact IMDB ratings, particularly whether specific film properties contribute to ratings greater than seven. A Generalized Linear Model (GLM) analysis is conducted to derive the relationships between these properties and IMDB ratings.

```{r}
# Import the data sets
imdb_data <- read.csv("dataset06.csv")

```

# Data Wrangling Methods {#sec-DW}

Before we begin the analysis of our data, let's transform the data using various tools. The process below describes the detailed data wrangling techniques that are used to get the desired data set. After having a glimpse of the data set, the 'genre' column is converted to a type factor type.

```{r}
imdb_data$genre <- as.factor(imdb_data$genre) #column converted from character type to factor type
```

A check for missing values is conducted and it is found that 103 observations are missing from the column 'length'. Missing values are imputed with the median since median is a robust measure, less impacted by outliers as much as mean. The function *median( )* reveals the median to be 90 minutes. However, it is observed in @tbl-median-length that the median lengths vary across the different genres. With this information, the missing lengths of films are replaced by median length of the respective genre.

```{r}
#| label: tbl-median-length
#| tbl-cap: Median length by genre.
#| echo: true
# Check for missing values
missing_values <- colSums(is.na(imdb_data)) 
# 103 values are missing from the column length

median_length <- median(imdb_data$length, na.rm = TRUE) # median is 90 minutes

median_length_by_genre <- imdb_data %>%
  group_by(genre) %>% 
  summarize(median_length = median(length, na.rm = TRUE))

kable(median_length_by_genre, caption = "Median Length by Genre")

for (i in 1:nrow(median_length_by_genre)) {
  genre <- median_length_by_genre$genre[i]
  median_length <- median_length_by_genre$median_length[i]
  imdb_data$length[imdb_data$genre == genre & is.na(imdb_data$length)] <- median_length
}
```

As per the research question, a new column 'high_rating' containing binary variables coressponding to 'rating' values is created. This column takes a value of 1 for IMDB ratings greater than or equal to seven and 0 for IMDB ratings less than seven. Additionally, another categorical variable 'rate' conveying the same is also added.

```{r}
#new binary column#
imdb_data$high_rating <- ifelse(imdb_data$rating >= 7, 1, 0)

#Add a categorical variable as a column
imdb_data$rate<- ifelse(imdb_data$rating >= 7, "Rating greater than 7", "Rating less than 7")
```

# Exploratory Data Analysis {#sec-EDA}

## View the data

The data set has 1937 rows and 9 columns, 7 of which are from the original data.

```{r}
# check on the size of a data set
dim <- dim(imdb_data)
```

Let's have a look at the first five rows of the data frame.

```{r}
#| label: tbl-glimpse-dataset
#| tbl-cap: Glimpse of the first five rows in the IMDB data set.
imdb_data |>
  slice_head(n=5) |>
  gt()
```

The variables in @tbl-glimpse-dataset

-   **film.id** : The unique identifier for the film

-   **year** : Year of release of the film in cinemas

-   **length** : Duration (in minutes)

-   **budget** : Budget for the films production (in \$1000000s)

-   **votes** : Number of positive votes received by viewers

-   **genre** : Genre of the film

-   **rating** : IMDB rating from 0 to 10

-   **high_rating** : 1 for IMDB ratings greater than or equal to seven and 0 for IMDB ratings less than 7

-   **rate** : 'Rating greater than 7' got high_rating = 1 and 'Rating less than 7' for high_rating = 0

## Summary Statistics {#sec-sum}

```{r}
#| label: tbl-summary-statistics
#| tbl-cap: Summary statistics on the IMDB data by variables.
#| echo: true
summary_year <- imdb_data %>%
  summarise('Variables'="year",
            'Mean' = mean(year),
            'Median' = median(year),
            'St.Dev' = sd(year),
            'Min' = min(year),
            'Max' = max(year),
            'IQR' = quantile(year,0.75)-quantile(year,0.25),
            'Sample_size' = n())
summary_length <- imdb_data %>%
  summarise('Variables'="length",
            'Mean' = mean(length),
            'Median' = median(length),
            'St.Dev' = sd(length),
            'Min' = min(length),
            'Max' = max(length),
            'IQR' = quantile(length,0.75)-quantile(length,0.25),
            'Sample_size' = n())
summary_budget <- imdb_data %>%
  summarise('Variables'="budget",
            'Mean' = mean(budget),
            'Median' = median(budget),
            'St.Dev' = sd(budget),
            'Min' = min(budget),
            'Max' = max(budget),
            'IQR' = quantile(budget,0.75)-quantile(budget,0.25),
            'Sample_size' = n())
summary_votes <- imdb_data %>%
  summarise('Variables'="votes",
            'Mean' = mean(votes),
            'Median' = median(votes),
            'St.Dev' = sd(votes),
            'Min' = min(votes),
            'Max' = max(votes),
            'IQR' = quantile(votes,0.75)-quantile(votes,0.25),
            'Sample_size' = n())
summary_rating <- imdb_data %>%
  summarise('Variables'="rating",
            'Mean' = mean(rating),
            'Median' = median(rating),
            'St.Dev' = sd(rating),
            'Min' = min(rating),
            'Max' = max(rating),
            'IQR' = quantile(rating,0.75)-quantile(rating,0.25),
            'Sample_size' = n())

combined_summary <- bind_rows(summary_year, summary_length, summary_budget,
                              summary_votes, summary_rating)
combined_summary |>
  gt() |>
  fmt_number(decimals=2) |>
  cols_label(
    Variables=html("Variables"),
    Mean = html("Mean"),
    Median = html("Median"),
    St.Dev = html("Std. Dev"),
    Min = html("Min"),
    Max = html("Max"),
    IQR = html("IQR"),
    Sample_size = html("Sample Size")
  ) 
```

The @tbl-summary-statistics shows that the summary for the columns year, length, budget, votes and rating.

• For the variable year, the years of the films ranges from 1896 to 2005.

• For the variable length, the films runs from 1 minute to 316 minutes.The median for length of films is 90 minutes.

• For variable budget, the budget of films is from 3.2 (\$1000000s) to 21.2 (\$1000000s).The median budget of a film is 12(\$1000000s).

• For variable votes, the votes of films ranges from 5 to 103,854 which suggests large variation. It can be observed the IQR is relatively large as well.\clearpage

## Correlation {#sec-cor}

```{r}
#| label: fig-scatterplot-matrix
#| fig-cap: Scatterplot matrix between rating and explanatory variables.
#| fig-align: center
#| fig-width: 7
#| fig-height: 6
#| message: false
ggpairs(imdb_data[, c("rating","year", "budget",  "length", "votes")], title = "Scatterplot matrix")+
  theme_bw()
  
```

The @fig-scatterplot-matrix shows weak correlation between the variables.

## Visualization {#sec-viz}

### Histograms

```{r}
#| label: fig-histograms
#| fig-cap: Histograms of statistical distribution for varibles
#| fig-align: center
#| fig-height: 7
#| fig-width: 6
#| message: false

rating_plot <- ggplot(data=imdb_data, mapping=aes(x=rating))+
  geom_histogram(color = "black",fill="skyblue")+
  theme_bw()

year_plot <- ggplot(data=imdb_data, mapping=aes(x=year))+
  geom_histogram(color = "black",fill="skyblue")+
  theme_bw()

length_plot <- ggplot(data=imdb_data, mapping=aes(x=length))+
  geom_histogram(color = "black",fill="skyblue")+
  theme_bw()

budget_plot <- ggplot(data=imdb_data, mapping=aes(x=budget))+
  geom_histogram(color = "black",fill="skyblue")+
  theme_bw()

votes_plot <- ggplot(data=imdb_data, mapping=aes(x=votes))+
  geom_histogram(color = "black",fill="skyblue")+
  theme_bw()

log_votes_plot <- ggplot(data=imdb_data, mapping=aes(x=log(votes)))+
  geom_histogram(color = "black",fill="skyblue")+
  theme_bw()

grid.arrange(rating_plot,year_plot,budget_plot,length_plot,votes_plot, log_votes_plot, ncol=2)
```

The @fig-histograms shows that the data structures follow exponential distributions. The variable 'votes' displays skewness due to large difference in values of maximum and minimum values. To reduce this skewness and facilitate more robust analysis, a logarithmic transformation is used.

```{r}
#Add a new column#
imdb_data <- imdb_data %>%
  mutate(log_votes = log(votes))
```

### Scatterplot for rating vs explanatory variables

Scatterplot to understand the relationship between rating and four variables(year,length,budget,log_votes)

```{r}
#| label: fig-scatterplots-relationship
#| fig-cap: Scatterplots between rating and four explanatory variables. 
#| fig-align: center
#| fig-height: 5
#| message: false
s1 <- ggplot(data=imdb_data, aes(x = year, y = rating, color = rate))+
  geom_point(size=0.5)+
  theme_bw()+
  theme(legend.position = "none") 

s2 <- ggplot(data=imdb_data, aes(x = length, y = rating, color = rate))+
  geom_point(size=0.5)+
  theme_bw()+
  theme(legend.position = "none") 

s3 <- ggplot(data=imdb_data, aes(x = budget, y = rating, color = rate))+
  geom_point(size=0.5)+
  theme_bw()+
  theme(legend.position = "none") 

s4 <- ggplot(data=imdb_data, aes(x = log_votes , y = rating, color = rate))+
  geom_point(size=0.5)+
  theme_bw()+
  theme(legend.position = "none") 

ggarrange(s1,s2,s3,s4,ncol = 2, nrow=2, common.legend = T, legend = "bottom")


#grid.arrange(s1,s2,s3,s4,ncol = 2)
```

The @fig-scatterplots-relationship suggests that there seems to be no linear relationship between the response variable and the explanatory variables which justifies the weak correlation observed earlier.

### Boxplot for genre

```{r}
#| label: fig-boxplot-ratings
#| fig-cap: Boxplot of ratings by genre.
#| fig-align: center
#| fig-width: 6
#| message: false
ggplot(data =imdb_data, mapping = aes(x = genre, y = rating)) +
  geom_boxplot(fill="skyblue")+
  theme_bw()
```

The @fig-boxplot-ratings distribution of rating genre wise. Outliers for ratings can be seen for the genre's Action, Documentary, Drama and Romance.

## The relationship response and explanatory variable

### Variable 1: Length

```{r}
#| label: fig-boxplot-length
#| fig-cap: Boxplot of length by rating.
#| fig-width: 4
#| fig-align: center
#| message: false

#boxplot
ggplot(data = imdb_data, aes(x = rate, y = length,fill=rate) )+
  geom_boxplot() +
  theme_bw()+
  theme(legend.position = "none") 

```

@fig-boxplot-length shows that the median film length of films with 'Rating greater than 7' is less than that of 'Rating less than 7' films. It can be observed IQR of 'Rating less than 7' is smaller but has many outliers.

```{r}
#| label: tbl-summary-length
#| tbl-cap: Summary statistics on length by rating.
#| tbl-colwidths: [60,40]
#| echo: true
table=imdb_data %>%
  group_by(rate) %>%
  summarise('Mean' = mean(length),
            'Median' = median(length),
            'St.Dev' = sd(length),
            'Min' = min(length),
            'Max' = max(length),
            'IQR' = quantile(length,0.75)-quantile(length,0.25),
            'Sample_size' = n())
table|>
  gt() |>
  fmt_number(decimals=2) |>
  cols_label(
    rate=html("rate"),
    Mean = html("Mean"),
    Median = html("Median"),
    St.Dev = html("St.Dev"),
    Min = html("Min"),
    Max = html("Max"),
    IQR = html("IQR"),
    Sample_size = html("Sample Size")
  )
```

The @tbl-summary-length The median length film with 'Rating greater than 7' is (73 minutes) lower than that with 'Rating less than 7' (95.74 minutes).\clearpage

### Variable 2 : budget

```{r}
#| label: fig-boxplot-budget
#| fig-cap: Boxplot of budget by rating.
#| fig-width: 4
#| fig-align: center
#| message: false
#boxplot
ggplot(data = imdb_data, aes(x = rate, y = budget,fill=rate) )+
  geom_boxplot() +
  theme_bw()+
  theme(legend.position = "none") 

```

@fig-boxplot-budget shows that the median budget film of 'Rating greater than 7' is slightly higher than that of 'Rating less than 7' films. There are 9 outliers.

```{r}
#| label: tbl-summary-budget
#| tbl-cap: Summary statistics on budget by rating.
#| echo: true
table=imdb_data %>%
  group_by(rate) %>%
  summarise('Mean' = mean(budget),
            'Median' = median(budget),
            'St.Dev' = sd(budget),
            'Min' = min(budget),
            'Max' = max(budget),
            'IQR' = quantile(budget,0.75)-quantile(budget,0.25),
            'Sample_size' = n())

table|>
  gt() |>
  fmt_number(decimals=2) |>
  cols_label(
    Median = html("Median"),
    St.Dev = html("Std. Dev"),
    Min = html("Min"),
    Max = html("Max"),
    IQR = html("IQR"),
    Sample_size = html("Sample Size")
  )
```

The @tbl-summary-budget shows that the mean and median for 'Rating greater than 7' is almost equal. Similarly, it can be observed for and 'Rating less than 7' as well. This suggests a normal distribution. The variability is also equivalent for the 2 categories.

### Variable 3 : log_votes

```{r}
#| label: fig-boxplot-logvotes
#| fig-cap: Boxplot of log_votes by rating.
#| fig-width: 4
#| fig-align: center
#| message: false
ggplot(data = imdb_data, aes(x = rate, y = log_votes,fill=rate) )+
  geom_boxplot() +
  theme_bw()+
  theme(legend.position = "none")

```

@fig-boxplot-logvotes shows that the median log_votes film of 'Rating greater than 7' films is lower than that of 'Rating less than 7' films.

```{r}
#| label: tbl-summary-logvotes
#| tbl-cap: Summary statistics of votes(log) by rating.
#| echo: true
table=imdb_data %>%
  group_by(rate) %>%
  summarise('Mean' = mean(log_votes),
            'Median' = median(log_votes),
            'St.Dev' = sd(log_votes),
            'Min' = min(log_votes),
            'Max' = max(log_votes),
            'IQR' = quantile(log_votes,0.75)-quantile(log_votes,0.25),
            'Sample_size' = n())

table|>
  gt() |>
  fmt_number(decimals=2) |>
  cols_label(
    Mean = html("Mean"),
    Median = html("Median"),
    St.Dev = html("Std. Dev"),
    Min = html("Min"),
    Max = html("Max"),
    IQR = html("IQR"),
    Sample_size = html("Sample Size")
  )
```

The @tbl-summary-logvotes shows that the mean and median for 'Rating greater than 7' is almost equal.

### Variable 4 : genre

The ratio of ratings above 7 to ratings below 7 and sample sizes for each type

```{r}
#| label: tbl-summary-genre
#| tbl-cap: Summary statistics of genre
library(janitor)

data_1=imdb_data %>%
        group_by(genre)%>%
        count()
colnames(data_1)=c("genre","genre_sum_count")
genre_form=imdb_data %>% 
  tabyl(genre, rate) %>% 
  adorn_percentages() %>% 
  adorn_pct_formatting() %>%
  adorn_ns()%>%
  mutate(genre_sum_count=as.matrix(data_1[2]))
genre_form|>
  gt()
```

It can be seen the size for the genre 'Romance' is only 20, which is comparatively small. We observe the following:

-   Animation, Documentary, Short - have more films with 'Rating greater than 7'

-   Action, Drama, Romance - have more films with 'Rating less than 7'

-   Comedy - films with 'Rating greater than 7' are moderately higher than 'Rating less than 7'

```{r}
#| label: fig-dodgedbarplot-genre
#| fig-cap: Dodged barplot of genre by rating.
#| fig-width: 6
#| fig-align: center
#| message: false
ggplot(imdb_data, aes(x = genre, fill = rate)) +
   geom_bar(position = "dodge", stat = "count")+
  theme_bw()+
  theme(legend.position = "bottom") 
```
The @fig-dodgedbarplot-genre supports the table above.

## Outliers

It can be observed from the scatterplot that there are outliers present especially for length and votes. Then extreme outlier values are replaced by threshold values corresponding to specific percentiles

-   length - 10th and 90th percentiles

-   budget- 5th percentile and 95th percentile

-   log_votes- Since logarithmic transformation had already removed a considerable amount of outlier, the threshold was set to 10th and 90th percentiles

This replacement strategy aims to mitigate the impact of outliers on the analysis while retaining the overall distribution of the data. The approach ensures that extreme values are transformed to less extreme values, thereby improving the robustness of subsequent statistical analyses.

```{r}
# Length
length_outliers <- imdb_data %>%
group_by(rate) %>%
  mutate(is_outlier = length > quantile(length, 0.75) + 1.5 * IQR(length) |
           length < quantile(length, 0.25) - 1.5 * IQR(length)) %>%
  filter(is_outlier) %>%
  ungroup() %>%
  arrange(length) # 97 outliers

percentiles_length <- imdb_data %>%
  summarise(q10 = quantile(length, 0.10),
            q90 = quantile(length, 0.90)) #q10 = 15, q90 = 112
imdb_data <- imdb_data %>%
  mutate(length = ifelse(length < percentiles_length$q10, percentiles_length$q10, 
                         ifelse(length > percentiles_length$q90, percentiles_length$q90, length)))

length_outliers <- imdb_data %>%
group_by(rate) %>%
  mutate(is_outlier = length > quantile(length, 0.75) + 1.5 * IQR(length) |
           length < quantile(length, 0.25) - 1.5 * IQR(length)) %>%
  filter(is_outlier) %>%
  ungroup() %>%
  arrange(length) # 40 Observations

# Budget
budget_outliers <- imdb_data %>%
group_by(rate) %>%
  mutate(is_outlier = budget > quantile(budget, 0.75) + 1.5 * IQR(budget) |
           budget < quantile(budget, 0.25) - 1.5 * IQR(budget)) %>%
  filter(is_outlier) %>%
  ungroup() %>%
  arrange(budget) #9 outliers

percentiles_budget <- imdb_data %>%
  summarise(q05 = quantile(budget, 0.05),
            q95 = quantile(budget, 0.95)) #q10 = 7.2, q90 = 16.82
imdb_data <- imdb_data %>%
  mutate(budget = ifelse(budget < percentiles_budget$q05, percentiles_budget$q05, 
                         ifelse(budget > percentiles_budget$q95, percentiles_budget$q95, budget)))

budget_outliers <- imdb_data %>%
group_by(rate) %>%
  mutate(is_outlier = budget > quantile(budget, 0.75) + 1.5 * IQR(budget) |
           budget < quantile(budget, 0.25) - 1.5 * IQR(budget)) %>%
  filter(is_outlier) %>%
  ungroup() %>%
  arrange(budget) #No outliers

# log_votes
log_votes_outliers <- imdb_data %>%
  group_by(rate) %>%
  mutate(is_outlier = log_votes > quantile(log_votes, 0.75) + 1.5 * IQR(log_votes) |
           log_votes < quantile(log_votes, 0.25) - 1.5 * IQR(log_votes)) %>%
  filter(is_outlier) %>%
  ungroup() %>%
  arrange(log_votes) # 59 outliers

percentiles_log_votes <- imdb_data %>%
  summarise(q10 = quantile(log_votes, 0.10),
            q90 = quantile(log_votes, 0.90)) #q10 = 1.94591, q90 = 6.320768

imdb_data <- imdb_data %>%
  mutate(log_votes = ifelse(log_votes < percentiles_log_votes$q10, percentiles_log_votes$q10, 
                            ifelse(log_votes > percentiles_log_votes$q90, percentiles_log_votes$q90, log_votes))) # Replace log_votes outliers

# Identify outliers in log_votes again
log_votes_outliers <- imdb_data %>%
  group_by(rate) %>%
  mutate(is_outlier = log_votes > quantile(log_votes, 0.75) + 1.5 * IQR(log_votes) |
           log_votes < quantile(log_votes, 0.25) - 1.5 * IQR(log_votes)) %>%
  filter(is_outlier) %>%
  ungroup() %>%
  arrange(log_votes) # No outliers
```
# Formal Data Analysis {#sec-Formal}

## Fitting the Model {#sec-fm}

# Conclusions {#sec-Conc}
