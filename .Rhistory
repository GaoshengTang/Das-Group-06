#| label: libraries
library(ggplot2)
library(tidyverse)
library(gt)
library(patchwork)
library(gridExtra)
library(moderndive)
library(MASS)
library(knitr)
library(GGally)
library(skimr)
# Import the data sets
imdb_data <- read.csv("dataset06.csv")
glimpse(imdb_data)
# Since genre is of type character, we convert it to factor
imdb_data$genre <- as.factor(imdb_data$genre)
#new binary column#
imdb_data$high_rating <- ifelse(imdb_data$rating >= 7, 1, 0)
# Check for missing values
missing_values <- sum(is.na(imdb_data$length)) #103 values
colSums(is.na(imdb_data)) #103 observations are missing in 'length'
# Impute missing values with the median
median_length <- median(imdb_data$length, na.rm = TRUE)
imdb_data$length[is.na(imdb_data$length)] <- median_length
imdb_data |>
slice_head(n=5) |>
gt() |>
fmt_number(decimals=2)
summary_year <- imdb_data %>%
summarise('Mean' = mean(year),
'Median' = median(year),
'St.Dev' = sd(year),
'Min' = min(year),
'Max' = max(year),
'IQR' = quantile(year,0.75)-quantile(year,0.25),
'Sample_size' = n())
summary_length <- imdb_data %>%
summarise('Mean' = mean(length),
'Median' = median(length),
'St.Dev' = sd(length),
'Min' = min(length),
'Max' = max(length),
'IQR' = quantile(length,0.75)-quantile(length,0.25),
'Sample_size' = n())
summary_budget <- imdb_data %>%
summarise('Mean' = mean(budget),
'Median' = median(budget),
'St.Dev' = sd(budget),
'Min' = min(budget),
'Max' = max(budget),
'IQR' = quantile(budget,0.75)-quantile(budget,0.25),
'Sample_size' = n())
summary_votes <- imdb_data %>%
summarise('Mean' = mean(votes),
'Median' = median(votes),
'St.Dev' = sd(votes),
'Min' = min(votes),
'Max' = max(votes),
'IQR' = quantile(votes,0.75)-quantile(votes,0.25),
'Sample_size' = n())
combined_summary <- bind_rows(summary_year, summary_length, summary_budget, summary_votes)
combined_summary |>
gt() |>
fmt_number(decimals=2) |>
cols_label(
Mean = html("Mean"),
Median = html("Median"),
St.Dev = html("Std. Dev"),
Min = html("Minimum"),
Max = html("Maximum"),
IQR = html("Interquartile Range"),
Sample_size = html("Sample Size")
)
scatterplot_matrix <- ggpairs(imdb_data[, c("year", "budget", "rating", "length", "votes")],
title="Scatterplot matrix")
scatterplot_matrix
year_plot <- ggplot(data=imdb_data, mapping=aes(x=year))+
geom_histogram(color="red")
length_plot <- ggplot(data=imdb_data, mapping=aes(x=length))+
geom_histogram(color="blue")
budget_plot <- ggplot(data=imdb_data, mapping=aes(x=budget))+
geom_histogram(color="green")
votes_plot <- ggplot(data=imdb_data, mapping=aes(x=votes))+
geom_histogram(color="yellow")
log_votes_plot <- ggplot(data=imdb_data, mapping=aes(x=log(votes)))+
geom_histogram(color="yellow")
rating_plot <- ggplot(data=imdb_data, mapping=aes(x=rating))+
geom_histogram(color="skyblue")
grid.arrange(year_plot,budget_plot,votes_plot, log_votes_plot,
length_plot,rating_plot, ncol=2)
imdb_data <- imdb_data %>%
mutate(log_votes = log(votes))
#Add a binary variable as a column
imdb_data$rate<- ifelse(imdb_data$rating >= 7, "Greater than Seven", "Less than Seven")
s1 <- ggplot(data=imdb_data, aes(x = year, y = rating, color=rate))+
geom_point()
s2 <- ggplot(data=imdb_data, aes(x = length, y = rating, color=rate))+
geom_point()
s3 <- ggplot(data=imdb_data, aes(x = budget, y = rating, color=rate))+
geom_point()
s4 <- ggplot(data=imdb_data, aes(x = log_votes , y = rating, color=rate))+
geom_point()
grid.arrange(s1, s2, s3, s4, ncol=2)
ggplot(data = imdb_data, aes(x = rate, y = length,fill=rate) )+
geom_boxplot() +
labs(x = "rating", y = "length")
length_outliers <- imdb_data %>%
group_by(rate) %>%
mutate(is_outlier = length > quantile(length, 0.75) + 1.5 * IQR(length) |
length < quantile(length, 0.25) - 1.5 * IQR(length)) %>%
filter(is_outlier) %>%
ungroup()
```{r}
ggplot(data = imdb_data, aes(x = rate, y = log_votes,fill=rate) )+
geom_boxplot() +
labs(x = "rating", y = "log_votes")
log_votes_outliers <- imdb_data %>%
group_by(rate) %>%
mutate(is_outlier = log_votes > quantile(log_votes, 0.75) + 1.5 * IQR(log_votes) |
log_votes < quantile(log_votes, 0.25) - 1.5 * IQR(log_votes)) %>%
filter(is_outlier) %>%
ungroup()
summary(imdb_data$budget)
View(imdb_data)
colSums(is.na(imdb_data$budget))
colSums(is.na(imdb_data))
ggplot(data = imdb_data, aes(x = rate, y = budget,fill=rate) )+
geom_boxplot() +
labs(x = "rating", y = "budget")
budget_outliers <- imdb_data %>%
group_by(rate) %>%
mutate(is_outlier = budget > quantile(budget, 0.75) + 1.5 * IQR(budget) |
budget < quantile(budget, 0.25) - 1.5 * IQR(budget)) %>%
filter(is_outlier) %>%
ungroup()
library(tidyverse)
library(MASS)
library(ggplot2)
library(gridExtra)
library(knitr)
library(GGally)
#DATA WRANGLING#
#Load the dataset#
imdb_data <- read.csv("dataset06.csv")
glimpse(imdb_data)
mean(imdb_data$rating) # 5.294166
median(imdb_data$rating) # 4.6
imdb_data$genre <- as.factor(imdb_data$genre)
#new binary column#
imdb_data$high_rating <- ifelse(imdb_data$rating >= 7, 1, 0)
missing_values <- sum(is.na(imdb_data$length)) #103 values
colSums(is.na(imdb_data)) #103 observations are missing in 'length'
View(imdb_data)
median(imdb_data$length == 'Drama')
median(imdb_data$length == 'Drama', na.rm = TRUE)
summary(imdb_data)
median_length_by_genre <- imdb_data %>%
group_by(genre) %>%
summarize(median_length = median(length))
median_length_by_genre
median_length_by_genre <- imdb_data %>%
group_by(genre) %>%
summarize(median_length = median(length, na.rm = TRUE))
median_length_by_genre#EDA#
View(imdb_data)
imdb_data$length[is.na(imdb_data$length)] <- median_length_by_genre
for (i in 1:nrow(median_length_by_genre)) {
genre <- median_length_by_genre$genre[i]
median_length <- median_length_by_genre$median_length[i]
imdb_data$length[imdb_data$genre == genre & is.na(imdb_data$length)] <- median_length
}
sum(is.na(imdb_data$length))
View(imdb_data)
#DATA WRANGLING#
#Load the dataset#
imdb_data <- read.csv("dataset06.csv")
glimpse(imdb_data)
mean(imdb_data$rating) # 5.294166
median(imdb_data$rating) # 4.6
imdb_data$genre <- as.factor(imdb_data$genre)
#new binary column#
imdb_data$high_rating <- ifelse(imdb_data$rating >= 7, 1, 0)
# Check for missing values
missing_values <- sum(is.na(imdb_data$length)) #103 values
colSums(is.na(imdb_data)) #103 observations are missing in 'length'
View(imdb_data)
median_length_by_genre <- imdb_data %>%
group_by(genre) %>%
summarize(median_length = median(length, na.rm = TRUE))
median_length_by_genre
for (i in 1:nrow(median_length_by_genre)) {
genre <- median_length_by_genre$genre[i]
median_length <- median_length_by_genre$median_length[i]
imdb_data$length[imdb_data$genre == genre & is.na(imdb_data$length)] <- median_length
}
View(imdb_data)
#| label: libraries
library(ggplot2)
library(tidyverse)
library(gt)
library(patchwork)
library(gridExtra)
library(moderndive)
library(MASS)
library(knitr)
library(GGally)
library(skimr)
# Import the data sets
imdb_data <- read.csv("dataset06.csv")
glimpse(imdb_data)
# Since genre is of type character, we convert it to factor
imdb_data$genre <- as.factor(imdb_data$genre)
#new binary column#
imdb_data$high_rating <- ifelse(imdb_data$rating >= 7, 1, 0)
# Check for missing values
missing_values <- sum(is.na(imdb_data$length)) #103 values
colSums(is.na(imdb_data)) #103 observations are missing in 'length'
# Impute missing values with the median since median is a robust measure i.e not impacted by outliers as much as mean
median_length_by_genre <- imdb_data %>%
group_by(genre) %>%
summarize(median_length = median(length, na.rm = TRUE))
median_length_by_genre
for (i in 1:nrow(median_length_by_genre)) {
genre <- median_length_by_genre$genre[i]
median_length <- median_length_by_genre$median_length[i]
imdb_data$length[imdb_data$genre == genre & is.na(imdb_data$length)] <- median_length
}
colSums(is.na(imdb_data))
imdb_data |>
slice_head(n=5) |>
gt() |>
fmt_number(decimals=2)
summary_year <- imdb_data %>%
summarise('Mean' = mean(year),
'Median' = median(year),
'St.Dev' = sd(year),
'Min' = min(year),
'Max' = max(year),
'IQR' = quantile(year,0.75)-quantile(year,0.25),
'Sample_size' = n())
summary_length <- imdb_data %>%
summarise('Mean' = mean(length),
'Median' = median(length),
'St.Dev' = sd(length),
'Min' = min(length),
'Max' = max(length),
'IQR' = quantile(length,0.75)-quantile(length,0.25),
'Sample_size' = n())
summary_budget <- imdb_data %>%
summarise('Mean' = mean(budget),
'Median' = median(budget),
'St.Dev' = sd(budget),
'Min' = min(budget),
'Max' = max(budget),
'IQR' = quantile(budget,0.75)-quantile(budget,0.25),
'Sample_size' = n())
summary_votes <- imdb_data %>%
summarise('Mean' = mean(votes),
'Median' = median(votes),
'St.Dev' = sd(votes),
'Min' = min(votes),
'Max' = max(votes),
'IQR' = quantile(votes,0.75)-quantile(votes,0.25),
'Sample_size' = n())
combined_summary <- bind_rows(summary_year, summary_length, summary_budget, summary_votes)
combined_summary |>
gt() |>
fmt_number(decimals=2) |>
cols_label(
Mean = html("Mean"),
Median = html("Median"),
St.Dev = html("Std. Dev"),
Min = html("Minimum"),
Max = html("Maximum"),
IQR = html("Interquartile Range"),
Sample_size = html("Sample Size")
)
scatterplot_matrix <- ggpairs(imdb_data[, c("year", "budget", "rating", "length", "votes")],
title="Scatterplot matrix")
scatterplot_matrix
year_plot <- ggplot(data=imdb_data, mapping=aes(x=year))+
geom_histogram(color="red")
length_plot <- ggplot(data=imdb_data, mapping=aes(x=length))+
geom_histogram(color="blue")
budget_plot <- ggplot(data=imdb_data, mapping=aes(x=budget))+
geom_histogram(color="green")
votes_plot <- ggplot(data=imdb_data, mapping=aes(x=votes))+
geom_histogram(color="yellow")
log_votes_plot <- ggplot(data=imdb_data, mapping=aes(x=log(votes)))+
geom_histogram(color="yellow")
rating_plot <- ggplot(data=imdb_data, mapping=aes(x=rating))+
geom_histogram(color="skyblue")
grid.arrange(year_plot,budget_plot,votes_plot, log_votes_plot,
length_plot,rating_plot, ncol=2)
#Add a new column#
imdb_data <- imdb_data %>%
mutate(log_votes = log(votes))
#Add a binary variable as a column
imdb_data$rate<- ifelse(imdb_data$rating >= 7, "Greater than Seven", "Less than Seven")
s1 <- ggplot(data=imdb_data, aes(x = year, y = rating, color=rate))+
geom_point()
s2 <- ggplot(data=imdb_data, aes(x = length, y = rating, color=rate))+
geom_point()
s3 <- ggplot(data=imdb_data, aes(x = budget, y = rating, color=rate))+
geom_point()
s4 <- ggplot(data=imdb_data, aes(x = log_votes , y = rating, color=rate))+
geom_point()
grid.arrange(s1, s2, s3, s4, ncol=2)
ggplot(data = imdb_data, aes(x = rate, y = length,fill=rate) )+
geom_boxplot() +
labs(x = "rating", y = "length")
length_outliers <- imdb_data %>%
group_by(rate) %>%
mutate(is_outlier = length > quantile(length, 0.75) + 1.5 * IQR(length) |
length < quantile(length, 0.25) - 1.5 * IQR(length)) %>%
filter(is_outlier) %>%
ungroup()
View(length_outliers)
ggplot(data = imdb_data, aes(x = rate, y = budget,fill=rate) )+
geom_boxplot() +
labs(x = "rating", y = "budget")
budget_outliers <- imdb_data %>%
group_by(rate) %>%
mutate(is_outlier = budget > quantile(budget, 0.75) + 1.5 * IQR(budget) |
budget < quantile(budget, 0.25) - 1.5 * IQR(budget)) %>%
filter(is_outlier) %>%
ungroup()
ggplot(data = imdb_data, aes(x = rate, y = log_votes,fill=rate) )+
geom_boxplot() +
labs(x = "rating", y = "log_votes")
log_votes_outliers <- imdb_data %>%
group_by(rate) %>%
mutate(is_outlier = log_votes > quantile(log_votes, 0.75) + 1.5 * IQR(log_votes) |
log_votes < quantile(log_votes, 0.25) - 1.5 * IQR(log_votes)) %>%
filter(is_outlier) %>%
ungroup()
ggplot(imdb_data, aes(x = genre, y = rating, fill = genre))+
geom_boxplot()
